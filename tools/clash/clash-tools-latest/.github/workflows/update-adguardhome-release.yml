name: Update AdGuardHome Release
on:
  workflow_dispatch:
  schedule:
    - cron: "00 16 * * *"
  push:
    branches:
      - main
    paths-ignore:
      - "README.md"
      - ".github/workflows/delete-old-workflows.yml"
      - ".github/workflows/update-adguardhome-prerelease.yml"
      - ".github/workflows/update-clash.meta-alpha.yml"
      - ".github/workflows/update-clash.meta-release.yml"
      - ".github/workflows/update-clashdashboard.yml"
      - ".github/workflows/update-clashpremium-latest.yml"
      - ".github/workflows/update-clashpremium-release.yml"
      - ".github/workflows/update-release.yml"

env:
  download_url: https://github.com/AdguardTeam/AdGuardHome/releases/download
  download_version: ''

jobs:
  Update:
    runs-on: ubuntu-latest
    steps:
    - name: Clone Repository
      uses: actions/checkout@main

    - name: Download and unzip `upx`
      run: |
        mkdir -p ./tmp ./AdGuardHome-release
        upx_version=$(curl -sSL https://api.github.com/repos/upx/upx/releases/latest | grep 'tag_name' | sed 's/.*v//g' | sed 's/",$//g')
        echo "upx_version=${upx_version}" >> ${GITHUB_ENV}
        wget -P ./tmp "https://github.com/upx/upx/releases/download/v${upx_version}/upx-${upx_version}-amd64_linux.tar.xz"
        tar -xf "./tmp/upx-${upx_version}-amd64_linux.tar.xz" -C ./tmp
        rm -f ./tmp/*.tar.xz

    - name: Download and compress `AdGuardHome`
      run: |
        download_version=$(curl -sSL https://api.github.com/repos/AdguardTeam/AdGuardHome/releases/latest | grep 'tag_name' | sed 's/.*v/v/g' | sed 's/",$//g')
        echo "download_version=${download_version}" >> ${GITHUB_ENV}
        archs=(amd64 armv5 armv6 armv7 arm64 mips_softfloat mipsle_softfloat)
        new_name=(amd64 armv5 armv6 armv7 armv8 mips_softfloat mipsle_softfloat)
        for((i=0;i<7;i++));do
          wget "${download_url}/${download_version}/AdGuardHome_linux_${archs[i]}.tar.gz" -O - | tar -xz -C ./tmp
          mv -f ./tmp/AdGuardHome/AdGuardHome "./tmp/AdGuardHome/AdGuardHome_linux_${new_name[i]}"
          chmod +x "./tmp/AdGuardHome/AdGuardHome_linux_${new_name[i]}"
          "./tmp/upx-${upx_version}-amd64_linux/upx" "./tmp/AdGuardHome/AdGuardHome_linux_${new_name[i]}"
        done
        wget -P ./tmp "${download_url}/${download_version}/AdGuardHome_windows_amd64.zip"
        unzip -o ./tmp/AdGuardHome_windows_amd64.zip -d ./tmp
        rm -f ./tmp/*.zip
        mv -f ./tmp/AdGuardHome/AdGuardHome.exe ./tmp/AdGuardHome/AdGuardHome_windows_amd64.exe
        rm -rf ./tmp/upx*

    - name: Move `AdGuardHome` to `AdGuardHome` directory
      run: |
        rm -rf ./AdGuardHome-release/*
        rm -f ./tmp/AdGuardHome/*.sig
        cp -f ./tmp/AdGuardHome/AdGuardHome* ./AdGuardHome-release
        rm -rf ./tmp

    - name: Commit and push
      run: |
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git config --global user.name "github-actions[bot]"
        git add . && git commit -m "更新 AdGuardHome Release 版至 ${download_version}" || exit 0
        git push -f

    - name: Purge jsDelivr CDN
      run: |
        cd ./AdGuardHome-release || exit 1
        for file in $(ls); do
          curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@main/AdGuardHome-release/${file}"
        done
